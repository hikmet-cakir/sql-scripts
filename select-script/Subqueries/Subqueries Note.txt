Subqueries can be used as...  
A source of a value	-----------------------------------------------------------------------------------------------------|							         |
 									         |
A source of rows------------------------------------------------------------------------------------------                   |
								      |                  |
A source of a column -----------------------------------------------------------------                      |                  |
							|                     |                  |
							|	      |                  |
							|	      |                  |
SELECT 							|                     |	         |
	p1.name,						| 	      |	         |
            |	(SELECT COUNT(name) FROM products)  | <------------------|	      |                  |
|FROM (SELECT * FROM products) as p1                             | 		      |	          |
|JOIN    (SELECT * FROM products) as p2 ON p1.id = p2.id | <----------------------------                   |
| WHERE p1.id IN (SELECT id FROM products); | <------------------------------------------------------------










Understanding  the shape of a query result is key!

SELECT *
FROM Order 	->	Many rows, many columns


SELECT id
FROM orders 	->	Many rows, one column


SELECT COUNT(*)
FROM orders	->	One row, one column   (Single value)   Scalar query






Note 2
SELECT name, price, |XXXXXXXXXX| <------------------------- Any subquery that results in a single value (SELECT MAX(price) FROM products;)
FROM products
WHERE price > 876;




SELECT name, price_weight_ratio
FROM |			| AS P <------------------------------------- Any subquery, so long as the outer selects/wheres/etc are compatible
WHERE price_weight_ratio > 5;						     |
									     |
									     |
									     |
									     |
									     |
									     |
									     |
									     |
									     |
									     |
							SELECT 
								name,
								price / weight AS price_weight_ratio
							FROM products
									     |
									     |
									     |
									     |									     |
									     |
									     |
								GOTCHA : Subquery must have an alias applied to it




SELECT first_name
FROM users
JOIN (
|	| <=====================================Any subquery that returns data compatible with the 'ON' clause
) AS o									||
ON o.user_id = users.id 							||
									||
									||
									||
								SELECT user_id
								FROM orders
								WHERE product_id = 3





Show the id of orders that involve a product with a price/weight ratio greater than 5

SELECT id
FROM orders
WHERE product_id IN (	) <================== SELECT id FROM products WHERE price / weight > 5
		 |
		 |
		 |
		 |
  	Structure of data allowed to be returned by subquery changes depending on the comparison operator!





Data Structure with Where Subqueries

Operator in the WHERE clause		Structure of data the subquery must return
	>					Single value
	<					Single value
	>=					Single value
	<=					Single value
	=					Single value
	<> or !=					Single value
	IN					Single column
	NOT IN					Single column



Operator in the WHERE Clause		Structure of data the subquery must return
	> ALL/SOME/ANY				Single column
	< ALL/SOME/ANY				Single column
	>= ALL/SOME/ANY				Single column
	<= ALL/SOME/ANY				Single column
	= ALL/SOME/ANY				Single column
	<> ALL/SOME/ANY				Single column
